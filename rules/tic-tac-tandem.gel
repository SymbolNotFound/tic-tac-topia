%% Copyright (c) 2025, Symbol Not Found
%% 
%% Redistributions of source code must retain the above copyright notice, this
%% list of conditions and the following disclaimer.
%% 
%% Redistributions in binary form must reproduce the above copyright notice,
%% this list of conditions and the following disclaimer in the documentation
%% and/or other materials provided with the distribution.
%% 
%% Neither the name of the copyright holder nor the names of its contributors
%% may be used to endorse or promote products derived from this software without
%% specific prior written permission.
%% 
%% THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
%% AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
%% IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
%% ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
%% LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
%% CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
%% SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
%% INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
%% CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
%% ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
%% POSSIBILITY OF SUCH DAMAGE.
%%
%% github:SymbolNotFound/tic-tac-topia/rules/tic-tac-tandem.gel

output {(
  ^title := "Tic-Tac-Tandem"
  ^slug := "t3-tandem"
  ^author := "Kevin Damm"
  ^version := [0,7,9]
)}

consult "boards/MNK" (
  include #RectSurface
)


enum Marker :: "X" + "O"

role playerX, playerO
role _ {(
  base ^Marker :: Marker
)}

init (
  playerX.Marker := "X"
  playerO.Marker := "O"
)


base BLANK := " "
enum Index := {[ 1..3 ]} * {[ 1..3 ]}
enum BoardIndex := left || right

%% Valid markings on the board include each player's mark and two special marks.
%% The blank marking is the default value, and cells may also be frozen.
enum Marking :: BLANK + Marker + FROZEN(?i in 1..2)


surface boards =:= {[
  BoardIndex * #RectSurface<Index, Marking> {( init _ := BLANK )}
]}


%% A player's moves are on both boards at once,
%% and simultaneously with the other player.
input role -> Mark(Index, Index)

%% Players can mark any open cell (if it is BLANK)
?player -> Mark(?i1, ?i2)
  :- boards[left, ?i1] #= BLANK 
    ==> boards[left, ?i1] := ?player.Marker
    \=> collide(left, ?i1...)
  :- boards[right, ?i2] #= BLANK
    ==> boards[right, ?i2] := ?player.Marker
    \=> collide(right, ?i2...)

%% because play is simultaneous, there is a conflict resolution step.
%% When players choose the same position (on either board),
%% that cell is frozen out for a couple of turns.
collide(?bi, ?row, ?col) ==>
  boards[?bi, (?row, ?col)] := FROZEN(2)

collide(left, ?row, ?col) <==
  playerX.Mark((?row, ?col), _) and
  playerO.Mark((?row, ?col), _)

collide(right, ?row, ?col) <==
  playerX.Mark(_, (?row, ?col)) and
  playerO.Mark(_, (?row, ?col))


unfreeze(?bi, ?i) :- boards[?bi, ?i] #= FROZEN(1)
  ==> boards[?bi, (?r, ?c)] := BLANK

melt(?bi, ?i, ?k) :- boards[?bi, ?i] #= FROZEN(?k #> 1)
  ==> boards[?bi, ?i] := FROZEN(?k - 1)


%% As another eccentricity, the boards both rotate clockwise each turn.
boards[?bi, _] ==> (
  boards[?bi, (2, 2)] := boards[?bi, (2, 2)]
  boards[?bi, (1, 1)] := boards[?bi, (2, 1)]
  boards[?bi, (1, 2)] := boards[?bi, (1, 1)]
  boards[?bi, (1, 3)] := boards[?bi, (1, 2)]
  boards[?bi, (2, 3)] := boards[?bi, (1, 3)]
  boards[?bi, (3, 3)] := boards[?bi, (2, 3)]
  boards[?bi, (3, 2)] := boards[?bi, (3, 3)]
  boards[?bi, (3, 1)] := boards[?bi, (3, 2)]
  boards[?bi, (2, 1)] := boards[?bi, (3, 1)]
)


line(?player) :-
  role(?player) and
  boards[?i].line(?player.Marker)

open :- boards[_].exists(BLANK)

terminal :- line(_)
terminal :- ~open


goal :- line(playerX) and ~line(playerO)
    ==> {(
      playerX $+ 100
      ^winner := playerX
    )}

goal :- ~line(playerX) and line(playerO)
    ==> {(
      playerO $+ 100
      ^winner := playerO
    )}

playerX $+ 50 and playerO $+ 50 :-
  ~line(playerX) and ~line(playerO)
