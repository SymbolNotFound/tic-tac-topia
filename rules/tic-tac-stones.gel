meta {(
  ^title := "Tic-Tac-Stones"
  ^slug := "t3-stones"
  ^alias := "Tic-Tac-Morris"
  summary := ```\
A reproduction of one of the oldest known games, variants are known as Morris,
Achi, Shisima, Dara, and others.  Play consists of two stages: place and move.
Winner is the first player to make a line of three in a row with their pieces.
```
  author: "Kevin Damm"
  version: [0,4,0]
)}

consult "boards/MNK" (
  include #RectSurface
)
consult "control/turns" (
  include #Alternating
)

role left, right
role _ {(
  ^Color := Color
)}

init control := #Alternating<left, right>.control

enum Color := RED + BLACK

init (
  left.Color := RED
  right.Color := BLACK
)


init EMPTY := "_"
enum State := EMPTY | Color
enum Index := {[ 1..3 ]} * {[ 1..3 ]}

init board := #RectSurface<Index, State> {(
  init _ := EMPTY
)}

%% When not in control, the only move available is to wait.
input Wait
?player -> Wait () :- ~control(?player)


phase placement (
  input Place(Index)

  ?player -> Place (?row, ?col)
      :- control(?player) and board[?row, ?col] == EMPTY
      ==> board[?row, ?col] = ?player.State
)


phase movement (
  %% During the movement phase, the only action is to move a piece on the board.
  input Move(Index, Index)

  %% The player may move to any available coord, not only adjacent.
  ?player -> Move ((?frRow, ?frCol), (?toRow, ?toCol)) :-
      control(?player) and
      board[?frRow, ?frCol] == ?player.Marker and
      board[?toRow, ?toCol] == BLANK
      ==> board[?frRow, ?frCol] := BLANK and
          board[?toRow, ?toCol] := ?player.Marker
)


terminal :- board.line(_)


left $+ 100 :- board.line(left.Color)
right $+ 100 :- board.line(right.Color)

role $+ 50 :- ~board.line(any #Role)
